/* -LICENSE-START-
** Copyright (c) 2016 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/


/* BMDSwitcherAPI_v6_8.idl */

// Forward Declarations

interface IBMDSwitcherMultiView_v6_8;
interface IBMDSwitcherMultiViewIterator_v6_8;
interface IBMDSwitcherInput_v6_8;
interface IBMDSwitcherInputIterator_v6_8;

/* Interface IBMDSwitcherMultiView_v6_8 - MultiView Object */

[
    object,
    uuid(231AA55F-EC1D-4FFF-ACE7-3806BA7894BB),
    helpstring("MultiView Object")
] interface IBMDSwitcherMultiView_v6_8 : IUnknown
{
    HRESULT GetLayout([out] BMDSwitcherMultiViewLayout* layout);
    HRESULT SetLayout([in] BMDSwitcherMultiViewLayout layout);
    HRESULT GetWindowInput([in] unsigned int window, [out] BMDSwitcherInputId* input);
    HRESULT SetWindowInput([in] unsigned int window, [in] BMDSwitcherInputId input);
    HRESULT GetWindowCount([out] unsigned int* windowCount);
    HRESULT GetInputAvailabilityMask([out] BMDSwitcherInputAvailability* availabilityMask);
    HRESULT CanRouteInputs([out] BOOL* canRoute);
    HRESULT AddCallback([in] IBMDSwitcherMultiViewCallback* callback);
    HRESULT RemoveCallback([in] IBMDSwitcherMultiViewCallback* callback);
};

/* Interface IBMDSwitcherMultiViewIterator_v6_8 - MultiView Iterator */

[
    object,
    uuid(51FED981-C2AD-45A2-8618-61429CEED48D),
    helpstring("MultiView Iterator")
] interface IBMDSwitcherMultiViewIterator_v6_8 : IUnknown
{
	HRESULT Next([out] IBMDSwitcherMultiView_v6_8** multiView);
};

/* Interface IBMDSwitcherInput_v6_8 - Switcher Input Object */

[
    object,
    uuid(875D3396-6C8A-4FD8-93B7-D1CB655F2AF2),
    helpstring("Switcher Input Object")
] interface IBMDSwitcherInput_v6_8 : IUnknown
{
    HRESULT GetPortType([out] BMDSwitcherPortType* type);
    HRESULT GetInputAvailability([out] BMDSwitcherInputAvailability* availability);
    HRESULT SetShortName([in] BSTR name);
    HRESULT GetShortName([out] BSTR* name);
    HRESULT SetLongName([in] BSTR name);
    HRESULT GetLongName([out] BSTR* name);
    HRESULT ResetNames(void);
    HRESULT IsProgramTallied([out] BOOL* isTallied);
    HRESULT IsPreviewTallied([out] BOOL* isTallied);
    HRESULT GetAvailableExternalPortTypes([out] BMDSwitcherExternalPortType* types);
    HRESULT SetCurrentExternalPortType([in] BMDSwitcherExternalPortType value);
    HRESULT GetCurrentExternalPortType([out] BMDSwitcherExternalPortType* value);
    HRESULT GetInputId([out] BMDSwitcherInputId* inputId);
    HRESULT AddCallback([in] IBMDSwitcherInputCallback* callback);
    HRESULT RemoveCallback([in] IBMDSwitcherInputCallback* callback);
};

/* Interface IBMDSwitcherInputIterator_v6_8 - Input Iterator */

[
    object,
    uuid(F841D36E-2762-4215-A598-FFE76D0FF05C),
    helpstring("Input Iterator")
] interface IBMDSwitcherInputIterator_v6_8 : IUnknown
{
	HRESULT Next([out] IBMDSwitcherInput_v6_8** input);
	HRESULT GetById([in] BMDSwitcherInputId inputId, [out] IBMDSwitcherInput_v6_8** input);
};
