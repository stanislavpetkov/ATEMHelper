/* -LICENSE-START-
** Copyright (c) 2017 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/


/* BMDSwitcherAPI_v7_1_2.idl */

// Forward Declarations

interface IBMDSwitcherAudioMixer_v7_1_2;

/* Interface IBMDSwitcherAudioMixer_v7_1_2 - Audio Mixer Object */

[
    object,
    uuid(CD3AD708-6F82-41EB-B8B2-64605D4040F2),
    helpstring("Audio Mixer Object")
] interface IBMDSwitcherAudioMixer_v7_1_2 : IUnknown
{
    HRESULT GetProgramOutGain([out] double* gain);
    HRESULT SetProgramOutGain([in] double gain);
    HRESULT GetProgramOutBalance([out] double* balance /* [-1.00, 1.00] */);
    HRESULT SetProgramOutBalance([in] double balance /* [-1.00, 1.00] */);
	HRESULT GetProgramOutFollowFadeToBlack([out] BOOL* follow);
	HRESULT SetProgramOutFollowFadeToBlack([in] BOOL follow);
    HRESULT SetAllLevelNotificationsEnable([in] BOOL enable);
    HRESULT ResetProgramOutLevelNotificationPeaks(void);
    HRESULT ResetAllLevelNotificationPeaks(void);
    HRESULT AddCallback([in] IBMDSwitcherAudioMixerCallback* callback);
    HRESULT RemoveCallback([in] IBMDSwitcherAudioMixerCallback* callback);
    HRESULT CreateIterator([in] REFIID iid, [out] LPVOID* ppv);
};
