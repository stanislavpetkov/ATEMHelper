/* -LICENSE-START-
** Copyright (c) 2012 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/


/* BMDSwitcherAPI_v3_5.idl */

// Forward Declarations

interface IBMDSwitcherKeyFlyParameters_v3_5;

/* Interface IBMDSwitcherKeyFlyParameters_v3_5 - Key Fly Parameters */

[
    object,
    uuid(C522E970-DDB1-4027-B492-F52C1DFA5D09),
    helpstring("Key Fly Parameters v3.5")
] interface IBMDSwitcherKeyFlyParameters_v3_5 : IUnknown
{
    HRESULT GetFly([out] BOOL* isFlyKey);
    HRESULT SetFly([in] BOOL isFlyKey);
    HRESULT GetCanFly([out] BOOL* canFly);
    HRESULT GetRate([out] unsigned int* frames);
    HRESULT SetRate([in] unsigned int frames);
    HRESULT GetSizeX([out] double* multiplierX);
    HRESULT SetSizeX([in] double multiplierX);
    HRESULT GetSizeY([out] double* multiplierY);
    HRESULT SetSizeY([in] double multiplierY);
    HRESULT GetPositionX([out] double* offsetX);
    HRESULT SetPositionX([in] double offsetX);
    HRESULT GetPositionY([out] double* offsetY);
    HRESULT SetPositionY([in] double offsetY);
    HRESULT GetRotation([out] double* degrees);
    HRESULT SetRotation([in] double degrees);
    HRESULT ResetRotation(void);
    HRESULT ResetDVE(void); // Resets all DVE parameters, excluding mask
    HRESULT ResetDVEFull(void); // Resets all DVE parameters to full screen, excluding mask
    HRESULT IsKeyFrameStored([in] BMDSwitcherFlyKeyFrame keyFrame, [out] BOOL* stored);
    HRESULT StoreAsKeyFrame([in] BMDSwitcherFlyKeyFrame keyFrame); // Stores current state into the specified Key Frame, only Key Frame A and/or B can be specified.
    HRESULT RunToKeyFrame([in] BMDSwitcherFlyKeyFrame destination); // Can only specify 1 Key Frame destination
    HRESULT IsAtKeyFrames([out] BMDSwitcherFlyKeyFrame* keyFrames);
    HRESULT IsRunning([out] BOOL* isRunning, [out] BMDSwitcherFlyKeyFrame* destination);
    HRESULT AddCallback([in] IBMDSwitcherKeyFlyParametersCallback* callback);
    HRESULT RemoveCallback([in] IBMDSwitcherKeyFlyParametersCallback* callback);
};
