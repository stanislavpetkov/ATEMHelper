/* -LICENSE-START-
** Copyright (c) 2015 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/


/* BMDSwitcherAPI_v6_5_1.idl */

/* Enum BMDSwitcherInputPropertyId - IBMDSwitcherInput Property ID */

typedef [v1_enum] enum	_BMDSwitcherInputPropertyId_v6_5_1 {
	bmdSwitcherInputPropertyIdPortType_v6_5_1                    = /* 'prtp' */ 0x70727470,	// Int type (BMDSwitcherPortType), Get only
	bmdSwitcherInputPropertyIdInputAvailability_v6_5_1           = /* 'avlb' */ 0x61766C62,	// Int type (BMDSwitcherInputAvailability), Get only
	bmdSwitcherInputPropertyIdShortName_v6_5_1                   = /* 'shnm' */ 0x73686E6D,	// String type, Get/Set
	bmdSwitcherInputPropertyIdLongName_v6_5_1                    = /* 'lgnm' */ 0x6C676E6D,	// String type, Get/Set
	bmdSwitcherInputPropertyIdIsProgramTallied_v6_5_1            = /* 'ipgt' */ 0x69706774,	// Flag type, Get only
	bmdSwitcherInputPropertyIdIsPreviewTallied_v6_5_1            = /* 'iprt' */ 0x69707274,	// Flag type, Get only
	bmdSwitcherInputPropertyIdAvailableExternalPortTypes_v6_5_1  = /* 'aept' */ 0x61657074,	// Int type (BMDSwitcherExternalPortType), Get only
	bmdSwitcherInputPropertyIdCurrentExternalPortType_v6_5_1     = /* 'cept' */ 0x63657074,	// Int type (BMDSwitcherExternalPortType), Get/Set
} BMDSwitcherInputPropertyId_v6_5_1;

// Forward Declarations

interface IBMDSwitcherInputCallback_v6_5_1;
interface IBMDSwitcherInput_v6_5_1;
interface IBMDSwitcherInputIterator_v6_5_1;

/* Interface IBMDSwitcherInputCallback - Switcher Input Object Callback */

[
    object,
    uuid(8E583D89-0BAF-4447-AB8C-6A12CD8724CB),
    helpstring("Switcher Input Object Callback")
] interface IBMDSwitcherInputCallback_v6_5_1 : IUnknown
{
	HRESULT PropertyChanged([in] BMDSwitcherInputPropertyId_v6_5_1 propertyId);
};

/* Interface IBMDSwitcherInput - Switcher Input Object */

[
    object,
    uuid(66F3D466-8C8C-4DB4-B313-8DD2EC665DBB),
    helpstring("Switcher Input Object")
] interface IBMDSwitcherInput_v6_5_1 : IUnknown
{
	HRESULT AddCallback([in] IBMDSwitcherInputCallback_v6_5_1* callback);
	HRESULT RemoveCallback([in] IBMDSwitcherInputCallback_v6_5_1* callback);
	HRESULT SetFlag([in] BMDSwitcherInputPropertyId_v6_5_1 propertyId, [in] BOOL value);
	HRESULT GetFlag([in] BMDSwitcherInputPropertyId_v6_5_1 propertyId, [out] BOOL* value);
	HRESULT SetInt([in] BMDSwitcherInputPropertyId_v6_5_1 propertyId, [in] long long value);
	HRESULT GetInt([in] BMDSwitcherInputPropertyId_v6_5_1 propertyId, [out] long long* value);
	HRESULT SetFloat([in] BMDSwitcherInputPropertyId_v6_5_1 propertyId, [in] double value);
	HRESULT GetFloat([in] BMDSwitcherInputPropertyId_v6_5_1 propertyId, [out] double* value);
	HRESULT SetString([in] BMDSwitcherInputPropertyId_v6_5_1 propertyId, [in] BSTR value);
	HRESULT GetString([in] BMDSwitcherInputPropertyId_v6_5_1 propertyId, [out] BSTR* value);
    HRESULT GetInputId([out] BMDSwitcherInputId* inputId);
};

/* Interface IBMDSwitcherInputIterator - Input Iterator */

[
    object,
    uuid(92AB7A73-C6F6-47FC-92A7-C8EEADC9EAAC),
    helpstring("Input Iterator")
] interface IBMDSwitcherInputIterator_v6_5_1 : IUnknown
{
	HRESULT Next([out] IBMDSwitcherInput_v6_5_1** input);
	HRESULT GetById([in] BMDSwitcherInputId inputId, [out] IBMDSwitcherInput_v6_5_1** input);
};
