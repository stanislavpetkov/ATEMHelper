/* -LICENSE-START-
** Copyright (c) 2018 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/


/* BMDSwitcherAPI_v7_5.idl */

// Forward Declarations

interface IBMDSwitcherMixEffectBlockCallback_v7_5;
interface IBMDSwitcherMixEffectBlock_v7_5;
interface IBMDSwitcherMixEffectBlockIterator_v7_5;

/* Enum BMDSwitcherMixEffectBlockPropertyId_v7_5 - IBMDSwitcherMixEffectBlock_v7_5 Property ID */

typedef [v1_enum] enum	_BMDSwitcherMixEffectBlockPropertyId_v7_5 {
	bmdSwitcherMixEffectBlockPropertyIdProgramInput_v7_5                = /* 'pgip' */ 0x70676970,	// Int type (BMDSwitcherInputId), Get/Set
	bmdSwitcherMixEffectBlockPropertyIdPreviewInput_v7_5                = /* 'pvip' */ 0x70766970,	// Int type (BMDSwitcherInputId), Get/Set
	bmdSwitcherMixEffectBlockPropertyIdTransitionPosition_v7_5          = /* 'tsps' */ 0x74737073,	// Float type, Get/Set
	bmdSwitcherMixEffectBlockPropertyIdTransitionFramesRemaining_v7_5   = /* 'tfrm' */ 0x7466726D,	// Int type, Get only
	bmdSwitcherMixEffectBlockPropertyIdInTransition_v7_5                = /* 'iits' */ 0x69697473,	// Flag type, Get only
	bmdSwitcherMixEffectBlockPropertyIdFadeToBlackFramesRemaining_v7_5  = /* 'ffrm' */ 0x6666726D,	// Int type, Get only
	bmdSwitcherMixEffectBlockPropertyIdInFadeToBlack_v7_5               = /* 'iifb' */ 0x69696662,	// Flag type, Get only
	bmdSwitcherMixEffectBlockPropertyIdPreviewLive_v7_5                 = /* 'pvlv' */ 0x70766C76,	// Flag type, Get only
	bmdSwitcherMixEffectBlockPropertyIdPreviewTransition_v7_5           = /* 'pvts' */ 0x70767473,	// Flag type, Get/Set
	bmdSwitcherMixEffectBlockPropertyIdInputAvailabilityMask_v7_5       = /* 'iavm' */ 0x6961766D,	// Int type (BMDSwitcherInputAvailability), Get only
	bmdSwitcherMixEffectBlockPropertyIdFadeToBlackRate_v7_5             = /* 'ftbr' */ 0x66746272,	// Int type, Get/Set
	bmdSwitcherMixEffectBlockPropertyIdFadeToBlackFullyBlack_v7_5       = /* 'ftbb' */ 0x66746262,	// Flag type, Get/Set
	bmdSwitcherMixEffectBlockPropertyIdFadeToBlackInTransition_v7_5     = /* 'ftbt' */ 0x66746274	// Flag type, Get only
} BMDSwitcherMixEffectBlockPropertyId_v7_5;

/* Interface IBMDSwitcherMixEffectBlockCallback_v7_5 - Mix Effect Block v7_5 Notification Callback */

[
    object,
    uuid(96010829-2029-4DA3-A34B-70368605ABAA),
	helpstring("Mix Effect Block v7_5 Notification Callback")
] interface IBMDSwitcherMixEffectBlockCallback_v7_5 : IUnknown
{
	HRESULT PropertyChanged([in] BMDSwitcherMixEffectBlockPropertyId_v7_5 propertyId);
};

/* Interface IBMDSwitcherMixEffectBlock_v7_5 - Mix Effect Block v7_5 */

[
    object,
    uuid(11974D55-45E0-49D8-AE06-EEF4D5F81DF6),
	helpstring("Mix Effect Block v7_5")
] interface IBMDSwitcherMixEffectBlock_v7_5 : IUnknown
{
    HRESULT CreateIterator([in] REFIID iid, [out] LPVOID* ppv);
	HRESULT AddCallback([in] IBMDSwitcherMixEffectBlockCallback_v7_5* callback);
	HRESULT RemoveCallback([in] IBMDSwitcherMixEffectBlockCallback_v7_5* callback);
	HRESULT SetFlag([in] BMDSwitcherMixEffectBlockPropertyId_v7_5 propertyId, [in] BOOL value);
	HRESULT GetFlag([in] BMDSwitcherMixEffectBlockPropertyId_v7_5 propertyId, [out] BOOL* value);
	HRESULT SetInt([in] BMDSwitcherMixEffectBlockPropertyId_v7_5 propertyId, [in] long long value);
	HRESULT GetInt([in] BMDSwitcherMixEffectBlockPropertyId_v7_5 propertyId, [out] long long* value);
	HRESULT SetFloat([in] BMDSwitcherMixEffectBlockPropertyId_v7_5 propertyId, [in] double value);
	HRESULT GetFloat([in] BMDSwitcherMixEffectBlockPropertyId_v7_5 propertyId, [out] double* value);
	HRESULT SetString([in] BMDSwitcherMixEffectBlockPropertyId_v7_5 propertyId, [in] BSTR value);
	HRESULT GetString([in] BMDSwitcherMixEffectBlockPropertyId_v7_5 propertyId, [out] BSTR* value);
    HRESULT PerformAutoTransition(void);
    HRESULT PerformCut(void);
    HRESULT PerformFadeToBlack(void);
};

/* Interface IBMDSwitcherMixEffectBlockIterator_v7_5 - Mix Effect Block v7_5 Iterator */

[
    object,
    uuid(930BDE3B-4A78-43D0-8FD3-6E82ABA0E117),
	helpstring("Mix Effect Block v7_5 Iterator")
] interface IBMDSwitcherMixEffectBlockIterator_v7_5 : IUnknown
{
	HRESULT Next([out] IBMDSwitcherMixEffectBlock_v7_5** mixEffectBlock);
};

