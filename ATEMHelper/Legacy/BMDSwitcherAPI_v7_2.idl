/* -LICENSE-START-
** Copyright (c) 2017 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/


/* BMDSwitcherAPI_v7_2.idl */

// Forward Declarations

interface IBMDSwitcherKey_v7_2;

/* Interface IBMDSwitcherKey_v7_2 - Key Object */

[
    object,
    uuid(A41B54B5-0D52-44D5-ACE5-9B94B0AF2A0B),
    helpstring("Key Object")
] interface IBMDSwitcherKey_v7_2 : IUnknown
{
    HRESULT GetType([out] BMDSwitcherKeyType* type);
    HRESULT SetType([in] BMDSwitcherKeyType type);
    HRESULT GetInputCut([out] BMDSwitcherInputId* input);
    HRESULT SetInputCut([in] BMDSwitcherInputId input);
    HRESULT GetInputFill([out] BMDSwitcherInputId* input);
    HRESULT SetInputFill([in] BMDSwitcherInputId input);
    HRESULT GetCutInputAvailabilityMask([out] BMDSwitcherInputAvailability* availabilityMask);
    HRESULT GetFillInputAvailabilityMask([out] BMDSwitcherInputAvailability* availabilityMask);
    HRESULT GetOnAir([out] BOOL* onAir);
    HRESULT SetOnAir([in] BOOL onAir);
    HRESULT CanBeDVEKey([out] BOOL* canDVE);
    HRESULT GetMasked([out] BOOL* maskEnabled);
    HRESULT SetMasked([in] BOOL maskEnabled);
    HRESULT GetMaskTop([out] double* top);
    HRESULT SetMaskTop([in] double top);
    HRESULT GetMaskBottom([out] double* bottom);
    HRESULT SetMaskBottom([in] double bottom);
    HRESULT GetMaskLeft([out] double* left);
    HRESULT SetMaskLeft([in] double left);
    HRESULT GetMaskRight([out] double* right);
    HRESULT SetMaskRight([in] double right);
    HRESULT ResetMask(void);
    HRESULT GetTransitionSelectionMask([out] BMDSwitcherTransitionSelection* selectionMask);
    HRESULT AddCallback([in] IBMDSwitcherKeyCallback* callback);
    HRESULT RemoveCallback([in] IBMDSwitcherKeyCallback* callback);
};

/* Interface IBMDSwitcherKeyIterator_v7_2 - Key Iterator */

[
    object,
    uuid(ECC57473-0993-444F-B3CF-ED593CA25B09),
    helpstring("Key Iterator")
] interface IBMDSwitcherKeyIterator_v7_2 : IUnknown
{
	HRESULT Next([out] IBMDSwitcherKey_v7_2** key);
};
